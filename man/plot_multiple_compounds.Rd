% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_multiple_compounds.R
\name{plot_multiple_compounds}
\alias{plot_multiple_compounds}
\title{Plot Multiple Dose-Response Curves in a Single Graph}
\usage{
plot_multiple_compounds(
  results,
  compound_indices = NULL,
  y_limits = c(0, 150),
  colors = NULL,
  line_types = NULL,
  point_shapes = NULL,
  differentiation_method = "pointshape",
  legend_position = "outside",
  show_grid = FALSE,
  show_legend = TRUE,
  save_plot = NULL,
  plot_width = 10,
  plot_height = 8,
  plot_dpi = 600,
  axis_label_cex = 1.4,
  axis_number_cex = 1.4,
  auto_combine_threshold = 12,
  show_error_bars = TRUE,
  error_bar_width = 0.03,
  error_bar_lwd = 1,
  plot_title = "Multiple Dose-Response Curves",
  legend_cex = 0.8,
  legend_area_ratio = 0.25,
  legend_point_cex = 1
)
}
\arguments{
\item{results}{List object returned by \code{\link{fit_dose_response}} containing
dose-response analysis results.}

\item{compound_indices}{Numeric vector specifying which compounds to plot.
If NULL, plots all available compounds (default: NULL).}

\item{y_limits}{Numeric vector of length 2 specifying y-axis limits (default: c(0, 150)).}

\item{colors}{Character vector of colors for each compound. If NULL, generates
appropriate colors automatically (default: NULL).}

\item{line_types}{Numeric vector of line types for each compound (default: NULL).}

\item{point_shapes}{Numeric vector of point shapes for each compound (default: NULL).}

\item{differentiation_method}{Character specifying how to differentiate curves:
"color", "linetype", "pointshape", or "combined" (default: "pointshape").}

\item{legend_position}{Character specifying legend position: "bottomright", "bottom",
"bottomleft", "left", "topleft", "top", "topright", "right", or "outside"
(default: "outside").}

\item{show_grid}{Logical indicating whether to show background grid (default: FALSE).}

\item{show_legend}{Logical indicating whether to show legend (default: TRUE).}

\item{save_plot}{Either a file path for saving the plot, or TRUE for automatic naming
(default: NULL, no saving).}

\item{plot_width}{Plot width in inches for saved plots (default: 10).}

\item{plot_height}{Plot height in inches for saved plots (default: 8).}

\item{plot_dpi}{Resolution for saved raster images (default: 600).}

\item{axis_label_cex}{Character expansion factor for axis labels (default: 1.4).}

\item{axis_number_cex}{Character expansion factor for axis numbers (default: 1.4).}

\item{auto_combine_threshold}{Numeric threshold for automatically switching to
"combined" differentiation method (default: 12).}

\item{show_error_bars}{Logical indicating whether to show error bars (default: TRUE).}

\item{error_bar_width}{Width of error bar ends (default: 0.03).}

\item{error_bar_lwd}{Line width for error bars (default: 1).}

\item{plot_title}{Character string for plot title (default: "Multiple Dose-Response Curves").}

\item{legend_cex}{Character expansion factor for legend text (default: 0.8).}

\item{legend_area_ratio}{Numeric ratio of plot area allocated to external legend
when legend_position = "outside" (default: 0.25).}

\item{legend_point_cex}{Point size multiplier in legend (default: 1.0).}
}
\value{
Invisibly returns a list containing comprehensive plot metadata:
\itemize{
\item \code{compound_names}: Names of plotted compounds
\item \code{compound_indices}: Indices of plotted compounds
\item \code{n_compounds}: Number of compounds plotted
\item \code{plot_limits}: List with x and y axis limits used
\item \code{differentiation_method}: Method used for curve differentiation
\item \code{styling}: List with colors, line types, and point shapes used
\item \code{error_bars}: Error bar configuration
\item \code{legend_position}: Legend position used
\item \code{legend_settings}: Legend configuration parameters
\item \code{plot_title}: Plot title used
\item \code{file_saved}: Path to saved file if plot was saved
\item \code{file_format}: Format of saved file
\item \code{plot_dimensions}: Dimensions of the plot (width, height, dpi)
\item \code{timestamp}: Time when plot was generated
}
}
\description{
Creates composite plots showing multiple dose-response curves with advanced
differentiation methods, professional styling, and flexible legend placement.
Ideal for comparing multiple compounds or conditions in pharmacological studies.
}
\details{
This function creates sophisticated multi-curve dose-response plots with
intelligent automatic styling and professional presentation. It automatically
handles curve differentiation, legend placement, and output formatting for
publication-quality figures.

\strong{Automatic Features:}
\itemize{
\item \strong{Smart Differentiation}: Auto-switches to combined methods for many compounds
\item \strong{Color Management}: Generates distinct color palettes based on compound count
\item \strong{Limit Calculation}: Automatically determines optimal axis limits from data
\item \strong{Error Bar Handling}: Only shows error bars when meaningful data exists
\item \strong{Layout Optimization}: Adjusts plot layout for external legends
}

\strong{Differentiation Methods:}
\itemize{
\item \strong{color}: Uses distinct colors (optimal for 2-8 compounds)
\item \strong{linetype}: Uses line types 1-6 (repeats after 6 compounds)
\item \strong{pointshape}: Uses point shapes (optimal for 2-15 compounds)
\item \strong{combined}: Uses colors + line types + point shapes (best for 8+ compounds)
}
}
\examples{
\dontrun{
# Example 1: Publication-ready multi-panel comparison
analysis_results <- fit_dose_response(my_data, normalize = TRUE)

# Create comparison of different compound classes
control_compounds <- c(1, 2, 3)   # Reference compounds
test_compounds <- c(4, 5, 6, 7)   # Experimental compounds

# Plot controls
plot_multiple_compounds(
  analysis_results,
  compound_indices = control_compounds,
  differentiation_method = "color",
  colors = c("gray40", "gray60", "gray80"),
  plot_title = "Control Compounds",
  legend_position = "bottomright"
)

# Plot test compounds with bright colors
plot_multiple_compounds(
  analysis_results,
  compound_indices = test_compounds,
  differentiation_method = "color",
  colors = c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3"), # ColorBrewer colors
  plot_title = "Experimental Compounds",
  legend_position = "bottomright"
)

# Example 2: Black and white publication figure
plot_multiple_compounds(
  analysis_results,
  compound_indices = 1:6,
  differentiation_method = "combined",
  colors = rep("black", 6),  # All black lines
  line_types = 1:6,          # Different line types
  point_shapes = 15:20,      # Different point shapes
  plot_title = "Dose-Response Curves (Black & White)",
  save_plot = "bw_figure.tiff",
  plot_dpi = 1200
)

# Example 3: Large dataset with external legend
plot_multiple_compounds(
  analysis_results,
  compound_indices = 1:20,
  differentiation_method = "combined",
  legend_position = "outside",
  legend_area_ratio = 0.4,    # More space for legend
  legend_cex = 0.6,           # Smaller legend text
  plot_title = "High-Throughput Screening Results",
  plot_width = 14,            # Wider plot for many compounds
  plot_height = 8
)

# Example 4: Custom styling for specific comparisons
custom_colors <- c(
  "Compound_A" = "#1B9E77",
  "Compound_B" = "#D95F02", 
  "Compound_C" = "#7570B3",
  "Compound_D" = "#E7298A"
)

plot_multiple_compounds(
  analysis_results,
  compound_indices = c(2, 5, 8, 11),
  colors = custom_colors,
  line_types = c(1, 2, 1, 2),      # Alternating line types
  point_shapes = c(16, 17, 15, 18), # Distinct point shapes
  plot_title = "Selected Compound Comparison",
  show_error_bars = TRUE
)

# Example 5: Access and use detailed metadata
plot_meta <- plot_multiple_compounds(
  analysis_results,
  compound_indices = 1:8,
  differentiation_method = "combined"
)

# Create a plot summary report
cat("Multi-Curve Plot Summary:\n")
cat("Compounds plotted:", plot_meta$n_compounds, "\n")
cat("Differentiation method:", plot_meta$differentiation_method, "\n")
cat("X-axis range:", round(plot_meta$plot_limits$x_limits, 2), "\n")
cat("Y-axis range:", plot_meta$plot_limits$y_limits, "\n")
cat("Colors used:", length(unique(plot_meta$styling$colors)), "unique colors\n")
cat("Generated:", format(plot_meta$timestamp, "\%Y-\%m-\%d \%H:\%M"), "\n")

# Save styling information for reproducibility
write.csv(
  data.frame(
    Compound = plot_meta$compound_names,
    Color = plot_meta$styling$colors,
    LineType = plot_meta$styling$line_types,
    PointShape = plot_meta$styling$point_shapes
  ),
  "plot_styling_reference.csv",
  row.names = FALSE
)
}
}
