% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_multiple_sheets.R
\name{save_multiple_sheets}
\alias{save_multiple_sheets}
\title{Save Multiple Data Frames to Excel with Advanced Formatting Options}
\usage{
save_multiple_sheets(
  file_name,
  ...,
  decimal_comma = TRUE,
  decimal_places = 3,
  round_sheets = NULL
)
}
\arguments{
\item{file_name}{Character string specifying the output Excel file path.}

\item{...}{Data frames to be saved as separate worksheets. Can use named arguments
for custom sheet names (e.g., Summary = df1, Details = df2).}

\item{decimal_comma}{Logical indicating whether to use comma as decimal separator
instead of point. Recommended for European formats (default: TRUE).}

\item{decimal_places}{Integer specifying the number of decimal places for rounding
(default: 3).}

\item{round_sheets}{Numeric vector specifying which sheets (by position) should
have rounding applied. If NULL, all sheets are rounded (default: NULL).}
}
\value{
Invisibly returns NULL. The function primarily produces an Excel file
as output and displays a confirmation message.
}
\description{
Exports multiple data frames to a single Excel file with professional formatting,
decimal separator customization, selective rounding, and row name preservation.
Designed specifically for dose-response analysis results and scientific data.
}
\details{
This function provides sophisticated Excel export capabilities optimized for
scientific and pharmacological data presentation. Key features include:

\strong{Advanced Formatting Features:}
\itemize{
\item Multiple Sheets: Each data frame becomes a separate worksheet
\item Row Name Preservation: Automatically includes row names in a protected "RowNames" column
\item Decimal Customization: Converts decimal separators (point to comma) with precision control
\item Selective Rounding: Applies rounding only to specified worksheets
\item Scientific Notation: Preserves scientific notation when present
\item Protected Columns: Never modifies the "RowNames" column during formatting
}

\strong{Automatic Sheet Naming:}
\itemize{
\item Uses variable names for sheet names when unnamed arguments provided
\item Uses provided names when named arguments used
\item Maintains original data structure and integrity
}
}
\section{Row Name Handling}{

The function automatically preserves row names through:
\itemize{
\item Creating a dedicated "RowNames" column as the first column
\item Using original row names when available
\item Generating sequential numbers (1, 2, 3...) when no row names exist
\item Protecting the "RowNames" column from all decimal formatting operations
}
}

\section{Decimal Formatting Control}{

Advanced control over number formatting:
\itemize{
\item \code{decimal_comma = TRUE}: European format (1,234 instead of 1.234)
\item \code{decimal_comma = FALSE}: International format (1.234)
\item Scientific notation preserved in both formats (1,23e-4 or 1.23e-4)
\item Rounding applied before decimal separator conversion
}
}

\section{Rounding Strategies}{

The \code{round_sheets} parameter enables precise control:
\itemize{
\item \code{NULL}: Apply rounding to all worksheets (default behavior)
\item \code{1}: Apply rounding only to first worksheet
\item \code{c(1, 3)}: Apply rounding to worksheets 1 and 3
\item \code{2:4}: Apply rounding to worksheets 2, 3, and 4
\item \code{numeric(0)}: No rounding applied to any worksheet
}
}

\examples{
\dontrun{
# Example 1: Exporting comprehensive dose-response analysis results
# Perform analysis first
analysis_results <- fit_dose_response(my_data, normalize = TRUE)

# Export complete results with European decimal format
save_multiple_sheets(
  "dose_response_complete_analysis.xlsx",
  Summary_Table = analysis_results$summary_table,
  Detailed_Parameters = analysis_results$detailed_results[[1]]$parameters,
  Quality_Assessment = analysis_results$interval_means,
  Raw_Data = analysis_results$processed_data,
  decimal_comma = TRUE,
  decimal_places = 3
)

# Example 2: International format with selective rounding
save_multiple_sheets(
  "international_format.xlsx",
  IC50_Results = ic50_data,           # Round to 2 decimal places
  Kinetic_Parameters = kinetics_data, # No rounding for precision
  Statistical_Analysis = stats_data,  # Round to 2 decimal places
  decimal_comma = FALSE,              # Use point for international journals
  decimal_places = 2,
  round_sheets = c(1, 3)              # Round only sheets 1 and 3
)

# Example 3: High-precision scientific data
save_multiple_sheets(
  "high_precision_data.xlsx",
  Binding_Constants = kd_data,        # High precision, no rounding
  Dose_Response = dr_data,            # Standard precision
  decimal_comma = TRUE,
  decimal_places = 4,
  round_sheets = 2                    # Round only dose-response data
)

# Example 4: Multiple analysis batches
# Analyze different experimental conditions
control_results <- fit_dose_response(control_data)
treated_results <- fit_dose_response(treated_data)

save_multiple_sheets(
  "experimental_conditions.xlsx",
  Control_Condition = control_results$summary_table,
  Treated_Condition = treated_results$summary_table,
  Comparison_Analysis = comparison_stats,
  decimal_comma = TRUE,
  decimal_places = 3
)
}

\dontrun{
# Example 1: Exporting dose-response analysis results
# Perform analysis first
analysis_results <- fit_dose_response(my_data, normalize = TRUE)

# Export comprehensive results
save_multiple_sheets(
  "dose_response_complete.xlsx",
  Summary_Table = analysis_results$summary_table,
  Detailed_Results = analysis_results$detailed_results[[1]]$parameters,
  Quality_Metrics = analysis_results$interval_means,
  decimal_comma = TRUE,
  decimal_places = 3
)
}
}
\references{
For scientific data presentation standards:
\itemize{
\item "The International System of Units (SI)" - Decimal separator conventions
\item Nature Research Reporting Guidelines
\item Journal of Pharmacology and Experimental Therapeutics data standards
}
}
\seealso{
\code{\link{fit_dose_response}} for generating analysis results
\code{\link{reshape_dr_table}} for creating structured result tables
\code{\link[openxlsx]{write.xlsx}} for basic Excel export functionality
}
